n/sum(n)
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
f1<-0.02115
f2<-0.074
f3<-0.0846
s1<-0.563
s2<-0.563
s3<-0.563
# matrix
A <- c(f1,f2,f3,
s1,0,0,
0,s2,s3)
A <- matrix ((A), ncol=3, byrow = TRUE)
lambda(A)
eigen.analysis(A)
n<-c(10,10,10)
m<-c(0,0,1)
pop.projection(A,n,10)
A %*% n
A %*% (n + m)
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
lambda(B)
B %*% n
B %*% (n + m)
popMod <- function(x) B%*%n + m
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
n
n
sum(n)
n
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
f1<-0.02115
f2<-0.074
f3<-0.0846
s1<-0.563
s2<-0.563
s3<-0.563
# matrix
A <- c(f1,f2,f3,
s1,0,0,
0,s2,s3)
A <- matrix ((A), ncol=3, byrow = TRUE)
lambda(A)
eigen.analysis(A)
n<-c(10,10,10)
m<-c(0,0,1)
pop.projection(A,n,10)
A %*% n
A %*% (n + m)
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
lambda(B)
B %*% n
B %*% (n + m)
m
n
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
f1<-0.02115
f2<-0.074
f3<-0.0846
s1<-0.563
s2<-0.563
s3<-0.563
# matrix
A <- c(f1,f2,f3,
s1,0,0,
0,s2,s3)
A <- matrix ((A), ncol=3, byrow = TRUE)
lambda(A)
eigen.analysis(A)
n<-c(10,10,10)
m<-c(0,0,1)
pop.projection(A,n,10)
A %*% n
A %*% (n + m)
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
lambda(B)
B %*% n
B %*% (n + m)
# mutliply the matrix B by the population vector n
popMod <- function(x) B%*%n
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
# mutliply the matrix B by the population vector n plus an
# additional vector m which contains the immigrants
popMod <- function(x) B%*%n + m
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
popMod <- function(x) B%*%n + 1
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
n + 1
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
f1<-0.02115
f2<-0.074
f3<-0.0846
s1<-0.563
s2<-0.563
s3<-0.563
# matrix
A <- c(f1,f2,f3,
s1,0,0,
0,s2,s3)
A <- matrix ((A), ncol=3, byrow = TRUE)
lambda(A)
eigen.analysis(A)
n<-c(10,10,10)
m<-c(0,0,1)
pop.projection(A,n,10)
A %*% n
A %*% (n + m)
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
lambda(B)
B %*% n
B %*% (n + m)
# mutliply the matrix B by the population vector n
popMod <- function(x) B%*%n
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
n + 1
n
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
f1<-0.02115
f2<-0.074
f3<-0.0846
s1<-0.563
s2<-0.563
s3<-0.563
# matrix
A <- c(f1,f2,f3,
s1,0,0,
0,s2,s3)
A <- matrix ((A), ncol=3, byrow = TRUE)
lambda(A)
eigen.analysis(A)
n<-c(10,10,10)
m<-c(0,0,1)
pop.projection(A,n,10)
A %*% n
A %*% (n + m)
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
lambda(B)
B %*% n
B %*% (n + m)
# mutliply the matrix B by the population vector n
popBase <- function(x) B%*%n
pop<-numeric(40)
for (i in 1:40) {
n<-popBase(n)
pop[i]<-sum(n)}
pop
n/sum(n)
n
n<-c(10,10,10)
n+1
popMod <- function(x) B%*%n + m
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
f1<-0.02115
f2<-0.074
f3<-0.0846
s1<-0.563
s2<-0.563
s3<-0.563
# matrix
A <- c(f1,f2,f3,
s1,0,0,
0,s2,s3)
A <- matrix ((A), ncol=3, byrow = TRUE)
lambda(A)
eigen.analysis(A)
n<-c(10,10,10)
m<-c(0,0,1)
pop.projection(A,n,10)
A %*% n
m+n
lambda(B)
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
f1<-0.02115
f2<-0.074
f3<-0.0846
s1<-0.563
s2<-0.563
s3<-0.563
# matrix
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
# vector of initial pop size
n<-c(10,10,10)
# vector of immigrants
m<-c(0,0,1)
# mutliply the matrix B by the population vector n
popBase <- function(x) B%*%n
pop<-numeric(40)
for (i in 1:40) {
n<-popBase(n)
pop[i]<-sum(n)}
pop
n/sum(n)
# OR
# mutliply the matrix B by the population vector n plus an
# additional vector m which contains the immigrants
popMod <- function(x) B%*%n + m
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
lambda(B)
eigen.analysis(B)
x<-c(0,0,m[3]*0.1)
x
x<-c(0,0,m[3]/10)
x
m3
m[3]
x<-c(0,0,n[3]/10)
x
n[3]
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
# matrix
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
# vector of initial pop size
n<-c(10,10,10)
# vector of immigrants
m<-c(0,0,1)
n[3]
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
# matrix
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
# vector of initial pop size
n<-c(10,10,10)
# vector of immigrants
m<-c(0,0,1)
# could specify this as a fraction of the initial population size
x<-c(0,0,n[3]/10)
x
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
# Matrix Model with Immigration
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
# matrix
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
# vector of initial pop size
n<-c(10,10,10)
# vector of immigrants
m<-c(0,0,1)
# could specify this as a fraction of the initial population size
x<-c(0,0,n[3]/10)
# mutliply the matrix B by the population vector n
popBase <- function(x) B%*%n
pop<-numeric(40)
for (i in 1:40) {
n<-popBase(n)
pop[i]<-sum(n)}
pop
n/sum(n)
# OR
# mutliply the matrix B by the population vector n plus an
# additional vector m which contains the immigrants
popMod <- function(x) B%*%n + m
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
lambda(B)
eigen.analysis(B)
# Matrix Model with Immigration
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
# matrix
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
# vector of initial pop size
n<-c(10,10,10)
# vector of immigrants
m<-c(0,0,1)
# could specify this as a fraction of the initial population size
x<-c(0,0,n[3]/10)
# mutliply the matrix B by the population vector n
popBase <- function(x) B%*%n
pop<-numeric(100)
for (i in 1:100) {
n<-popBase(n)
pop[i]<-sum(n)}
pop
n/sum(n)
# OR
# mutliply the matrix B by the population vector n plus an
# additional vector m which contains the immigrants
popMod <- function(x) B%*%n + m
pop<-numeric(100)
for (i in 1:100) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
lambda(B)
eigen.analysis(B)
# Matrix Model with Immigration
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
# matrix
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
# vector of initial pop size
n<-c(10,10,10)
# vector of immigrants
m<-c(0,0,1)
# could specify this as a fraction of the initial population size
x<-c(0,0,n[3]/10)
# mutliply the matrix B by the population vector n
popBase <- function(x) B%*%n
pop<-numeric(1000)
for (i in 1:1000) {
n<-popBase(n)
pop[i]<-sum(n)}
pop
n/sum(n)
# OR
# mutliply the matrix B by the population vector n plus an
# additional vector m which contains the immigrants
popMod <- function(x) B%*%n + m
pop<-numeric(1000)
for (i in 1:1000) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
lambda(B)
eigen.analysis(B)
# Matrix Model with Immigration
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
# matrix
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
# vector of initial pop size
n<-c(10,10,10)
# vector of immigrants
m<-c(0,0,1)
# could specify this as a fraction of the initial population size
x<-c(0,0,n[3]/10)
# mutliply the matrix B by the population vector n
popBase <- function(x) B%*%n
pop<-numeric(10000)
for (i in 1:10000) {
n<-popBase(n)
pop[i]<-sum(n)}
pop
n/sum(n)
# OR
# mutliply the matrix B by the population vector n plus an
# additional vector m which contains the immigrants
popMod <- function(x) B%*%n + m
pop<-numeric(10000)
for (i in 1:10000) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
lambda(B)
eigen.analysis(B)
# Matrix Model with Immigration
# clean everything first
rm(list=ls())
# load required packages
library(popbio)
# matrix
B<- c(0.5,0.5,0.5,
0.5,0,0,
0,0.5,0.5)
B <- matrix ((B), ncol=3, byrow = TRUE)
# vector of initial pop size
n<-c(10,10,10)
# vector of immigrants
m<-c(0,0,1)
# could specify this as a fraction of the initial population size
x<-c(0,0,n[3]/10)
# mutliply the matrix B by the population vector n
popBase <- function(x) B%*%n
pop<-numeric(40)
for (i in 1:40) {
n<-popBase(n)
pop[i]<-sum(n)}
pop
n/sum(n)
# OR
# mutliply the matrix B by the population vector n plus an
# additional vector m which contains the immigrants
popMod <- function(x) B%*%n + m
pop<-numeric(40)
for (i in 1:40) {
n<-popMod(n)
pop[i]<-sum(n)}
pop
n/sum(n)
lambda(B)
eigen.analysis(B)
